#!/bin/bash
# Google Classroom Autopilot - Automated Configuration
# Configures Google Classroom integration with existing Google Cloud project

set -e

echo "╔════════════════════════════════════════════════════════════╗"
echo "║      GOOGLE CLASSROOM AUTOPILOT CONFIGURATION              ║"
echo "╚════════════════════════════════════════════════════════════╝"
echo ""

# Colors
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_success() { echo -e "${GREEN}✅ $1${NC}"; }
log_error() { echo -e "${RED}❌ $1${NC}"; }
log_warning() { echo -e "${YELLOW}⚠️  $1${NC}"; }
log_info() { echo -e "${BLUE}ℹ️  $1${NC}"; }

# Configuration
PROJECT_ID="magnetic-clone-436521-n9"
SITE_URL="https://elevateforhumanity.pages.dev"

echo "🎯 Target Configuration:"
echo "   Project: $PROJECT_ID"
echo "   Site: $SITE_URL"
echo ""

# Check if gcloud is installed
if ! command -v gcloud &> /dev/null; then
    log_error "gcloud CLI not installed"
    echo ""
    echo "Install with:"
    echo "  curl https://sdk.cloud.google.com | bash"
    echo "  exec -l \$SHELL"
    echo "  gcloud init"
    exit 1
fi

log_success "gcloud CLI found"

# Check authentication
echo ""
log_info "Checking Google Cloud authentication..."
if ! gcloud auth list --filter=status:ACTIVE --format="value(account)" &> /dev/null; then
    log_warning "Not authenticated to Google Cloud"
    echo ""
    echo "Run: gcloud auth login"
    exit 1
fi

ACTIVE_ACCOUNT=$(gcloud auth list --filter=status:ACTIVE --format="value(account)" | head -1)
log_success "Authenticated as: $ACTIVE_ACCOUNT"

# Set project
echo ""
log_info "Setting active project..."
if gcloud config set project "$PROJECT_ID" &> /dev/null; then
    log_success "Project set to: $PROJECT_ID"
else
    log_error "Failed to set project"
    exit 1
fi

# Enable Google Classroom API
echo ""
log_info "Enabling Google Classroom API..."
if gcloud services enable classroom.googleapis.com --project="$PROJECT_ID" 2>&1 | grep -q "enabled\|already"; then
    log_success "Google Classroom API enabled"
else
    log_warning "API may already be enabled or needs manual intervention"
fi

# Enable other required APIs
echo ""
log_info "Enabling additional APIs..."
APIS=(
    "cloudresourcemanager.googleapis.com"
    "iam.googleapis.com"
)

for api in "${APIS[@]}"; do
    if gcloud services enable "$api" --project="$PROJECT_ID" &> /dev/null; then
        log_success "Enabled: $api"
    fi
done

# Check if OAuth client exists
echo ""
log_info "Checking OAuth configuration..."

# Note: Creating OAuth clients via CLI requires additional setup
# We'll provide instructions instead

echo ""
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""
log_warning "OAuth credentials must be created manually"
echo ""
echo "📝 Next Steps:"
echo ""
echo "1. Create OAuth 2.0 Client:"
echo "   https://console.cloud.google.com/apis/credentials?project=$PROJECT_ID"
echo ""
echo "   - Click 'CREATE CREDENTIALS' → 'OAuth client ID'"
echo "   - Application type: Web application"
echo "   - Name: Elevate for Humanity LMS"
echo "   - Authorized redirect URIs:"
echo "     • $SITE_URL/auth/callback"
echo "     • http://localhost:5173/auth/callback"
echo ""
echo "2. Configure OAuth Consent Screen:"
echo "   https://console.cloud.google.com/apis/credentials/consent?project=$PROJECT_ID"
echo ""
echo "   - User Type: External"
echo "   - App name: Elevate for Humanity"
echo "   - Add scopes:"
echo "     • .../auth/classroom.courses"
echo "     • .../auth/classroom.coursework.students"
echo "     • .../auth/classroom.rosters"
echo "     • .../auth/classroom.topics"
echo ""
echo "3. Add credentials to Cloudflare Pages:"
echo "   https://dash.cloudflare.com"
echo ""
echo "   Environment Variables:"
echo "   • GOOGLE_OAUTH_CLIENT_ID=your-client-id"
echo "   • GOOGLE_OAUTH_CLIENT_SECRET=your-client-secret"
echo "   • GOOGLE_CLOUD_PROJECT=$PROJECT_ID"
echo ""
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""

# Create local .env template
echo ""
log_info "Creating .env template..."

if [ ! -f ".env" ]; then
    cat > .env.google-classroom << EOF
# Google Classroom Configuration
# Generated by google-classroom-autopilot.sh

# OAuth 2.0 Credentials (get from Google Cloud Console)
GOOGLE_OAUTH_CLIENT_ID=your-client-id-here
GOOGLE_OAUTH_CLIENT_SECRET=your-client-secret-here

# Project Configuration
GOOGLE_CLOUD_PROJECT=$PROJECT_ID

# Optional: Service Account for automation
# GOOGLE_SA_JSON_B64=your-base64-encoded-service-account-json

# Optional: Domain-wide delegation
# GOOGLE_IMPERSONATE_EMAIL=admin@yourdomain.com
EOF
    log_success "Created: .env.google-classroom"
    echo "   Copy values to your main .env file"
else
    log_info ".env already exists - not overwriting"
fi

# Summary
echo ""
echo "╔════════════════════════════════════════════════════════════╗"
echo "║                    AUTOPILOT SUMMARY                       ║"
echo "╚════════════════════════════════════════════════════════════╝"
echo ""

log_success "Google Classroom API enabled"
log_success "Project configured: $PROJECT_ID"
log_success "Required APIs enabled"
log_warning "OAuth credentials need manual creation"
echo ""

echo "📊 Status:"
echo "   ✅ APIs: Enabled"
echo "   ✅ Project: Configured"
echo "   ⚠️  OAuth: Needs manual setup (5 minutes)"
echo ""

echo "🔗 Quick Links:"
echo "   • Create OAuth: https://console.cloud.google.com/apis/credentials?project=$PROJECT_ID"
echo "   • Consent Screen: https://console.cloud.google.com/apis/credentials/consent?project=$PROJECT_ID"
echo "   • API Dashboard: https://console.cloud.google.com/apis/dashboard?project=$PROJECT_ID"
echo ""

echo "📚 Documentation:"
echo "   • GOOGLE_CLOUD_SETUP.md"
echo "   • google-classroom-autopilot/SETUP_GUIDE.md"
echo ""

log_success "Autopilot configuration complete!"
echo ""
echo "⏱️  Estimated time to finish: 5-10 minutes"
echo ""
