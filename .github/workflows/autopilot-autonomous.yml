name: Autopilot Autonomous Operation

on:
  schedule:
    # Run every 30 minutes
    - cron: '*/30 * * * *'
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  autonomous-operation:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.1'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.7.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run TypeScript check
        id: typecheck
        continue-on-error: true
        run: pnpm run typecheck

      - name: Run ESLint check
        id: lint
        continue-on-error: true
        run: pnpm run lint

      - name: Run tests
        id: test
        continue-on-error: true
        run: pnpm test

      - name: Run build
        id: build
        continue-on-error: true
        run: pnpm run build

      - name: Auto-fix TypeScript errors
        if: steps.typecheck.outcome == 'failure'
        run: |
          echo "TypeScript errors detected - attempting auto-fix"
          # Regenerate routes with proper types
          node scripts/generate-routes.mjs
          git add src/router/AppRoutes.tsx
          git diff --cached --quiet || git commit -m "fix: auto-fix TypeScript errors [autopilot]"

      - name: Auto-fix ESLint errors
        if: steps.lint.outcome == 'failure'
        run: |
          echo "ESLint errors detected - attempting auto-fix"
          pnpm run lint --fix || true
          git add -A
          git diff --cached --quiet || git commit -m "fix: auto-fix ESLint errors [autopilot]"

      - name: Push auto-fixes
        if: steps.typecheck.outcome == 'failure' || steps.lint.outcome == 'failure'
        run: |
          git config user.name "Autopilot Bot"
          git config user.email "autopilot@elevateforhumanity.org"
          git push origin main || echo "No changes to push"

      - name: Create issue if build fails
        if: steps.build.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          script: |
            const title = 'üö® Autopilot: Build Failure Detected';
            const body = `## Build Failure

            The autonomous autopilot detected a build failure.

            **Time**: ${new Date().toISOString()}
            **Branch**: main
            **Workflow**: ${context.workflow}

            ### Actions Taken
            - ‚úÖ TypeScript check: ${context.payload.steps?.typecheck?.outcome || 'unknown'}
            - ‚úÖ ESLint check: ${context.payload.steps?.lint?.outcome || 'unknown'}
            - ‚ùå Build: FAILED

            ### Next Steps
            The autopilot will continue monitoring and attempt fixes on the next run.

            ---
            *This issue was created automatically by the autonomous autopilot system.*`;

            // Check if issue already exists
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['autopilot', 'build-failure']
            });

            if (issues.data.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['autopilot', 'build-failure', 'automated']
              });
            }

      - name: Report success
        if: steps.build.outcome == 'success'
        run: |
          echo "‚úÖ All checks passed - system healthy"
          echo "TypeScript: ‚úÖ"
          echo "ESLint: ‚úÖ"
          echo "Tests: ‚úÖ"
          echo "Build: ‚úÖ"
