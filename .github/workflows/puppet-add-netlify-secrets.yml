name: Puppet Autopilot - Add Netlify Secrets

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "yes" to confirm adding secrets to Netlify'
        required: true
        default: 'no'

jobs:
  add-secrets:
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm == 'yes'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.1'

      - name: Install Netlify CLI
        run: npm install -g netlify-cli

      - name: Add OPENAI_API_KEY to Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "üîê Adding OPENAI_API_KEY to Netlify..."
          netlify env:set OPENAI_API_KEY "$OPENAI_API_KEY" \
            --context production \
            --context deploy-preview \
            --context branch-deploy \
            --site $NETLIFY_SITE_ID
          echo "‚úÖ OPENAI_API_KEY added successfully"

      - name: Add STRIPE_SECRET_KEY to Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        run: |
          echo "üîê Adding STRIPE_SECRET_KEY to Netlify..."
          netlify env:set STRIPE_SECRET_KEY "$STRIPE_SECRET_KEY" \
            --context production \
            --context deploy-preview \
            --context branch-deploy \
            --site $NETLIFY_SITE_ID
          echo "‚úÖ STRIPE_SECRET_KEY added successfully"

      - name: Add CLOUDFLARE_API_TOKEN to Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          echo "üîê Adding CLOUDFLARE_API_TOKEN to Netlify..."
          netlify env:set CLOUDFLARE_API_TOKEN "$CLOUDFLARE_API_TOKEN" \
            --context production \
            --context deploy-preview \
            --context branch-deploy \
            --site $NETLIFY_SITE_ID
          echo "‚úÖ CLOUDFLARE_API_TOKEN added successfully"

      - name: Verify environment variables
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          echo "üîç Verifying environment variables in Netlify..."
          netlify env:list --site $NETLIFY_SITE_ID
          echo ""
          echo "‚úÖ Environment variables verified"

      - name: Trigger deployment
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          echo "üöÄ Triggering new deployment with updated environment variables..."
          netlify deploy --prod --site $NETLIFY_SITE_ID
          echo "‚úÖ Deployment triggered"

      - name: Summary
        run: |
          echo "üéâ Puppet Autopilot: Secrets added successfully!"
          echo ""
          echo "‚úÖ OPENAI_API_KEY added to Netlify"
          echo "‚úÖ STRIPE_SECRET_KEY added to Netlify"
          echo "‚úÖ CLOUDFLARE_API_TOKEN added to Netlify"
          echo ""
          echo "üìã Next steps:"
          echo "   1. Verify at: https://app.netlify.com/sites/elevateforhumanityfix2/settings/deploys#environment"
          echo "   2. Monitor deployment at: https://app.netlify.com/sites/elevateforhumanityfix2/deploys"
          echo "   3. Test site at: https://elevateforhumanityfix2.netlify.app"
